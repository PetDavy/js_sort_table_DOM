{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableRows","tBodies","rows","tableHeader","tHead","headerList","cells","map","column","textContent","rowSort","columnHead","comparingFunction","columnIndex","indexOf","sortedRows","sort","rowA","rowB","columnA","querySelectorAll","columnB","row","append","addEventListener","event","formatNumber","number","Number","slice","replace","target","stringA","stringB","localeCompare","AgeA","AgeB","salaryA","salaryB"],"mappings":";AAAA,aA8CC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5CD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAYH,EAAMI,QAAQ,GAAGC,KAC7BC,EAAcN,EAAMO,MAAMF,KAAK,GAE/BG,EAAa,EAAIF,EAAYG,OAAOC,IAAI,SAAAC,GAAUA,OAAAA,EAAOC,cA2B/D,SAASC,EAAQC,EAAYC,GACrBC,IADwC,EACxCA,EAAcR,EAAWS,QAAQH,EAAWF,aAShCM,EAAAA,EAPC,EAAIf,GAAWgB,KAAK,SAACC,EAAMC,GACtCC,IAAAA,EAAUF,EAAKG,iBAAiB,MAAMP,GAAaJ,YACnDY,EAAUH,EAAKE,iBAAiB,MAAMP,GAAaJ,YAElDG,OAAAA,EAAkBO,EAASE,MAPU,IAUhB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBC,IAAAA,EAAmB,EAAA,MAC5BzB,EAAMI,QAAQ,GAAGsB,OAAOD,IAXoB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAzBhDnB,EAAYqB,iBAAiB,QAAS,SAAAC,GAC9BC,IAAAA,EAAe,SAAAC,GAAUC,OAAAA,OAAOD,EAAOE,MAAM,GAAGC,QAAQ,IAAK,MAQ3DL,OAAAA,EAAMM,OAAOtB,aACd,IAAA,OACA,IAAA,WACHC,EAAQe,EAAMM,OATI,SAACC,EAASC,GAAYD,OAAAA,EAAQE,cAAcD,KAU9D,MAEG,IAAA,MACHvB,EAAQe,EAAMM,OAZC,SAACI,EAAMC,GAAS,OAACD,GAAQC,IAaxC,MAEG,IAAA,SACH1B,EAAQe,EAAMM,OAfI,SAACM,EAASC,GACvBZ,OAAAA,EAAaW,GAAWX,EAAaY","file":"main.a25c9129.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableRows = table.tBodies[0].rows;\nconst tableHeader = table.tHead.rows[0];\n\nconst headerList = [...tableHeader.cells].map(column => column.textContent);\n\ntableHeader.addEventListener('click', event => {\n  const formatNumber = number => Number(number.slice(1).replace(',', ''));\n\n  const compareString = (stringA, stringB) => stringA.localeCompare(stringB);\n  const compareAge = (AgeA, AgeB) => +AgeA - +AgeB;\n  const compareSalary = (salaryA, salaryB) => {\n    return formatNumber(salaryA) - formatNumber(salaryB);\n  };\n\n  switch (event.target.textContent) {\n    case 'Name':\n    case 'Position':\n      rowSort(event.target, compareString);\n      break;\n\n    case 'Age':\n      rowSort(event.target, compareAge);\n      break;\n\n    case 'Salary':\n      rowSort(event.target, compareSalary);\n      break;\n  }\n});\n\nfunction rowSort(columnHead, comparingFunction) {\n  const columnIndex = headerList.indexOf(columnHead.textContent);\n\n  const sortedRows = [...tableRows].sort((rowA, rowB) => {\n    const columnA = rowA.querySelectorAll('td')[columnIndex].textContent;\n    const columnB = rowB.querySelectorAll('td')[columnIndex].textContent;\n\n    return comparingFunction(columnA, columnB);\n  });\n\n  for (const row of sortedRows) {\n    table.tBodies[0].append(row);\n  }\n}\n"]}